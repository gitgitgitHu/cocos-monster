{"version":3,"sources":["Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","default","type","AudioClip","setJumpAction","jumpUp","moveBy","v2","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","repeatForever","sequence","audioEngine","playEffect","startMoveAt","pos","enabled","xSpeed","node","setPosition","runAction","onLoad","jumpAction","accLeft","accRight","systemEvent","on","SystemEvent","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","touchReceiver","Canvas","instance","onTouchStart","onTouchEnd","event","keyCode","macro","KEY","a","left","d","right","touchLoc","getLocation","x","winSize","width","update","dt","Math","abs","parent","getCenterPos","centerPos","y","height","stopMove","stopAllActions","onDestroy","off"],"mappings":"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","file":"Player.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\n// cc是cocos creator的简称\n// Cocos 引擎的主要命名空间，引擎代码中所有的类、函数、属性和常量都在这个命名空间中定义。\ncc.Class({\n    extends: cc.Component,\n\n    // 一个节点具有的属性都需要写在 properties 代码块中\n    // 这些属性将规定主角的移动方式，在代码中我们不需要关心这些数值是多少，因为我们之后会直接在属性检查器中设置这些数值\n    // 以后在游戏制作过程中，我们可以将需要随时调整的属性都放在 properties 中。\n    properties: {\n        // 主角跳跃高度\n        jumpHeight: 0,\n        // 主角跳跃持续时间\n        jumpDuration: 0,\n        // 最大移动速度\n        maxMoveSpeed: 0,\n        // 加速度\n        accel: 0,\n        //跳跃音效\n        jumpAudio: {\n            default: null,\n            type: cc.AudioClip\n        }\n    },\n    setJumpAction: function() {\n        // 跳跃上升\n\n        /* moveBy()\n        在规定的时间内移动指定的一段距离\n        第一个参数就是我们之前定义主角属性中的跳跃时间\n        第二个参数是一个 Vec2（表示 2D 向量和坐标）类型的对象*/\n        let jumpUp = cc\n            .moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight))\n            .easing(cc.easeCubicActionOut()); //缓动运动\n        // 下落\n        let jumpDown = cc\n            .moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight))\n            .easing(cc.easeCubicActionIn());\n        // 添加一个回调函数，用于在动作结束时调用我们定义的其他方法\n        var callback = cc.callFunc(this.playJumpSound, this);\n        // 不断重复，而且每次完成落地动作后调用回调来播放声音\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback));\n    },\n    playJumpSound: function() {\n        // 调用声音引擎播放声音\n        cc.audioEngine.playEffect(this.jumpAudio, false);\n    },\n\n    startMoveAt: function(pos) {\n        this.enabled = true;\n        this.xSpeed = 0;\n        this.node.setPosition(pos);\n        this.node.runAction(this.setJumpAction()); //runAction执行并返回该执行的动作。\n    },\n    // 在场景加载后立刻执行\n    onLoad: function() {\n        this.enabled = false;\n        // 初始化跳跃动作\n        this.jumpAction = this.setJumpAction();\n        // 加速度方向开关\n        this.accLeft = false;\n        this.accRight = false;\n        // 主角当前水平方向速度\n        this.xSpeed = 0;\n        // 初始化键盘输入监听\n        cc.systemEvent.on(\n            //systemEvent系统事件，目前支持按键事件和重力感应事件\n            cc.SystemEvent.EventType.KEY_DOWN,\n            this.onKeyDown,\n            this\n        );\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n        //建立touch监听\n        var touchReceiver = cc.Canvas.instance.node;\n        touchReceiver.on('touchstart', this.onTouchStart, this);\n        touchReceiver.on('touchend', this.onTouchEnd, this);\n    },\n    onKeyDown(event) {\n        switch (event.keyCode) {\n            case cc.macro.KEY.a: //macro.KEY键盘事件的按键值\n            case cc.macro.KEY.left:\n                this.accLeft = true;\n                this.accRight = false;\n                break;\n            case cc.macro.KEY.d:\n            case cc.macro.KEY.right:\n                this.accLeft = false;\n                this.accRight = true;\n                break;\n        }\n    },\n    onKeyUp(event) {\n        switch (event.keyCode) {\n            case cc.macro.KEY.a:\n            case cc.macro.KEY.left:\n                this.accLeft = false;\n                break;\n            case cc.macro.KEY.d:\n            case cc.macro.KEY.right:\n                this.accRight = false;\n                break;\n        }\n    },\n    onTouchStart(event) {\n        var touchLoc = event.getLocation(); //获取鼠标位置对象，对象包含 x 和 y 属性\n        if (touchLoc.x >= cc.winSize.width / 2) {\n            this.accLeft = false;\n            this.accRight = true;\n        } else {\n            this.accLeft = true;\n            this.accRight = false;\n        }\n    },\n\n    onTouchEnd(event) {\n        this.accLeft = false;\n        this.accRight = false;\n    },\n    update: function(dt) {\n        // 根据当前加速度方向每帧更新速度\n        if (this.accLeft) {\n            this.xSpeed -= this.accel * dt;\n        } else if (this.accRight) {\n            this.xSpeed += this.accel * dt;\n        }\n        // 限制主角的速度不能超过最大值\n        if (Math.abs(this.xSpeed) > this.maxMoveSpeed) {\n            // Math.abs返回绝对值\n            this.xSpeed =\n                (this.maxMoveSpeed * this.xSpeed) / Math.abs(this.xSpeed);\n        }\n\n        // 根据当前速度更新主角的位置\n        this.node.x += this.xSpeed * dt;\n        //限制怪兽位置在屏幕中\n        if (this.node.x > this.node.parent.width / 2) {\n            this.node.x = this.node.parent.width / 2;\n            this.xSpeed = 0;\n        } else if (this.node.x < -this.node.parent.width / 2) {\n            this.node.x = -this.node.parent.width / 2;\n            this.xSpeed = 0;\n        }\n    },\n    getCenterPos: function() {\n        var centerPos = cc.v2(this.node.x, this.node.y + this.node.height / 2);\n        return centerPos;\n    },\n\n    stopMove: function() {\n        this.accLeft = false;\n        this.accRight = false;\n        this.xSpeed = 0;\n        this.node.stopAllActions(); // 让节点上的所有 Action 都失效\n    },\n    onDestroy() {\n        // 取消键盘输入监听\n        cc.systemEvent.off(\n            cc.SystemEvent.EventType.KEY_DOWN,\n            this.onKeyDown,\n            this\n        );\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n        //取消touch监听\n        var touchReceiver = cc.Canvas.instance.node;\n        touchReceiver.off('touchstart', this.onTouchStart, this);\n        touchReceiver.off('touchend', this.onTouchEnd, this);\n    }\n});\n"]}